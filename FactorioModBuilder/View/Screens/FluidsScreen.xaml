<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="clr-namespace:WpfUtils.ValueConverters;assembly=WpfUtils"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:enum="clr-namespace:FactorioModBuilder.Models.ProjectItems.Prototype">
    <DataTemplate x:Key="Fluids_Template">
        <Grid>
            <Grid.Resources>
                <ObjectDataProvider x:Key="energyEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="enum:EnergyUnit"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Main datagrid to display fluids and associated properties at a glace -->
            <DataGrid x:Name="itemList" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" AutoGenerateColumns="False"
                      ItemsSource="{Binding Path=ItemList}" Margin="5">
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Width="*" Binding="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTemplateColumn Header="SubGroup" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Path=DataContext.PossibleSubGroups, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                          SelectedItem="{Binding Path=SubGroupItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Name"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Default Temp" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <xctk:IntegerUpDown Increment="1" FormatString="N0" Value="{Binding Path=DefaultTemp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Heat Capacity" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <xctk:IntegerUpDown Grid.Column="0" Increment="1" FormatString="N0" 
                                                        Value="{Binding Path=HeatCapacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <ComboBox Grid.Column="1" ItemsSource="{Binding Source={StaticResource energyEnum}}" 
                                              SelectedItem="{Binding Path=HeatCapacityUnit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={conv:EnumToDescriptionString}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Base Color" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Rectangle Margin="1" Fill="{Binding Path=BaseColor, Converter={conv:ColorToSolidColorBrush}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Flow Color" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Rectangle Margin="1" Fill="{Binding Path=FlowColor, Converter={conv:ColorToSolidColorBrush}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Max Temp" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <xctk:IntegerUpDown Increment="1" FormatString="N0" Value="{Binding Path=MaxTemp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Pressure to Speed Ratio" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <xctk:DecimalUpDown FormatString="F2" Increment="0.01" Value="{Binding Path=PressureToSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Flow to Energy Ratio" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <xctk:DecimalUpDown FormatString="F2" Increment="0.01" Value="{Binding Path=FlowToEnergy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Order" Width="Auto" Binding="{Binding Path=Order, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1" 
                        IsEnabled="{Binding Path=SelectedItem, Converter={conv:ObjectNotNull}, ElementName=itemList}">
                <Label Content="Fluid Information:" FontWeight="Bold" Margin="5 5 0 5" FontSize="14"/>
                <Label Content="{Binding Path=SelectedItem.Name, ElementName=itemList}" FontWeight="Bold" Margin="0 5 5 5" FontSize="14"/>
            </StackPanel>
            <Grid Grid.Column="1" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Content="Add Fluid" Grid.Column="1" VerticalContentAlignment="Center"
                        Command="{Binding Path=AddFluidCmd}" Margin="5"/>
                <Button Content="Remove Fluid" Grid.Column="2" VerticalContentAlignment="Center"
                        Command="{Binding Path=RemoveFluidCmd}" Margin="5"
                        IsEnabled="{Binding Path=SelectedItem, Converter={conv:ObjectNotNull}, ElementName=itemList}"/>
            </Grid>
            <Grid Grid.Column="0" Grid.Row="2"
                  IsEnabled="{Binding Path=SelectedItem, Converter={conv:ObjectNotNull}, ElementName=itemList}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Column="0" Grid.Row="0" Content="Name:" VerticalContentAlignment="Center" Margin="5"/>
                <TextBox Grid.Column="1" Grid.ColumnSpan="2" VerticalContentAlignment="Center" Margin="5" Grid.Row="0"
                         Text="{Binding Path=SelectedItem.Name, ElementName=itemList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Grid.Column="0" Grid.Row="1" Content="Def. Temp:" VerticalContentAlignment="Center" Margin="5"/>
                <xctk:IntegerUpDown Grid.Column="1" Grid.ColumnSpan="2" Margin="5" Grid.Row="1" Increment="1" FormatString="N0"
                                    Value="{Binding Path=SelectedItem.DefaultTemp, ElementName=itemList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Grid.Column="0" Grid.Row="2" Content="Heat Cap:" VerticalContentAlignment="Center" Margin="5"/>
                <Grid Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <xctk:IntegerUpDown Grid.Column="0" Margin="5 5 2.5 5" Increment="1" FormatString="N0"
                                    Value="{Binding Path=SelectedItem.HeatCapacity, ElementName=itemList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <ComboBox Grid.Column="1" Margin="2.5 5 5 5" ItemsSource="{Binding Source={StaticResource energyEnum}}"
                              SelectedItem="{Binding Path=SelectedItem.HeatCapacityUnit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ElementName=itemList}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={conv:EnumToDescriptionString}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
                <Label Grid.Column="0" Grid.Row="3" Content="Base Color:" VerticalContentAlignment="Center" Margin="5"/>
                <Rectangle Grid.Column="1" Margin="5" Grid.Row="3" StrokeThickness="1"
                           Fill="{Binding Path=SelectedItem.BaseColor, Converter={conv:ColorToSolidColorBrush}, ElementName=itemList}">
                    <Rectangle.Style>
                        <Style TargetType="{x:Type Rectangle}">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Stroke" Value="LightGray"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter Property="Stroke" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
                <Button Grid.Column="2" Content="..." Margin="5" Grid.Row="3"
                        Command="{Binding Path=SelectedItem.SelectBaseColorCmd, ElementName=itemList}"/>
                <Label Grid.Column="0" Grid.Row="4" Content="Flow Color:" VerticalContentAlignment="Center" Margin="5"/>
                <Rectangle Grid.Column="1" Margin="5" Grid.Row="4" StrokeThickness="1"
                           Fill="{Binding Path=SelectedItem.FlowColor, Converter={conv:ColorToSolidColorBrush}, ElementName=itemList}">
                    <Rectangle.Style>
                        <Style TargetType="{x:Type Rectangle}">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Stroke" Value="LightGray"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter Property="Stroke" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
                <Button Grid.Column="2" Content="..." Margin="5" Grid.Row="4"
                        Command="{Binding Path=SelectedItem.SelectFlowColorCmd, ElementName=itemList}"/>
                <Label Grid.Column="0" Content="Max Temp:" Margin="5" Grid.Row="5" VerticalContentAlignment="Center"/>
                <xctk:IntegerUpDown Grid.Column="1" Grid.ColumnSpan="2" Margin="5" Grid.Row="5" Increment="1" FormatString="N0"
                                    Value="{Binding Path=SelectedItem.MaxTemp, ElementName=itemList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Grid.Column="0" Content="Icon:" Margin="5" Grid.Row="6" VerticalContentAlignment="Center"/>
                <TextBox Grid.Column="1" Margin="5" Grid.Row="6" VerticalContentAlignment="Center"
                         Text="{Binding Path=SelectedItem.IconPath, ElementName=itemList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Content="..." Grid.Column="2" Margin="5" Grid.Row="6" 
                        VerticalContentAlignment="Center"
                        Command="{Binding Path=SelectedItem.SelectIconCmd, ElementName=itemList}"/>
            </Grid>
            <Grid Grid.Column="1" Grid.Row="2" IsEnabled="{Binding Path=SelectedItem, 
                Converter={conv:ObjectNotNull}, ElementName=itemList}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Column="0" Grid.Row="0" Content="Pres : Speed:" Margin="5" VerticalContentAlignment="Center"/>
                <xctk:DecimalUpDown Grid.Column="1" Grid.Row="0" Margin="5" FormatString="F2" Increment="0.01"
                                    Value="{Binding Path=SelectedItem.PressureToSpeed, ElementName=itemList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Grid.Column="0" Grid.Row="1" Content="Flow : Energy:" Margin="5" VerticalContentAlignment="Center"/>
                <xctk:DecimalUpDown Grid.Column="1" Grid.Row="1" Margin="5" FormatString="F2" Increment="0.01"
                                    Value="{Binding Path=SelectedItem.FlowToEnergy, ElementName=itemList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Grid.Column="0" Grid.Row="2" Content="Order:" Margin="5" VerticalContentAlignment="Center"/>
                <TextBox Grid.Column="1" Grid.Row="2" Margin="5" VerticalContentAlignment="Center"
                         Text="{Binding Path=SelectedItem.Order, ElementName=itemList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>